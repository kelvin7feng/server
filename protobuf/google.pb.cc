// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {

namespace {

const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2eproto() {
  protobuf_AddDesc_google_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google.proto");
  GOOGLE_CHECK(file != NULL);
  Message_descriptor_ = file->message_type(0);
  static const int Message_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, pdata_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::internal_default_instance(),
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_),
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, Message::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2eproto() {
  Message_default_instance_.Shutdown();
  delete Message_reflection_;
}

void protobuf_InitDefaults_google_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Message_default_instance_.DefaultConstruct();
  Message_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_google_2eproto_once_);
void protobuf_InitDefaults_google_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_google_2eproto_once_,
                 &protobuf_InitDefaults_google_2eproto_impl);
}
void protobuf_AddDesc_google_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_google_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014google.proto\022\006google\">\n\007Message\022\021\n\tser"
    "ver_id\030\001 \002(\005\022\021\n\tplayer_id\030\002 \002(\005\022\r\n\005pdata"
    "\030\003 \001(\t", 86);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_google_2eproto_once_);
void protobuf_AddDesc_google_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_google_2eproto_once_,
                 &protobuf_AddDesc_google_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2eproto {
  StaticDescriptorInitializer_google_2eproto() {
    protobuf_AddDesc_google_2eproto();
  }
} static_descriptor_initializer_google_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kServerIdFieldNumber;
const int Message::kPlayerIdFieldNumber;
const int Message::kPdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_google_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.Message)
}

void Message::InitAsDefaultInstance() {
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_id_, 0, reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&server_id_) + sizeof(player_id_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:google.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  protobuf_InitDefaults_google_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:google.Message)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Message, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Message*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(server_id_, player_id_);
    if (has_pdata()) {
      pdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 server_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_server_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }

      // required int32 player_id = 2;
      case 2: {
        if (tag == 16) {
         parse_player_id:
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pdata;
        break;
      }

      // optional string pdata = 3;
      case 3: {
        if (tag == 26) {
         parse_pdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pdata().data(), this->pdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.Message.pdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.Message)
  // required int32 server_id = 1;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->server_id(), output);
  }

  // required int32 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_id(), output);
  }

  // optional string pdata = 3;
  if (has_pdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pdata().data(), this->pdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.Message.pdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.Message)
  // required int32 server_id = 1;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->server_id(), target);
  }

  // required int32 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_id(), target);
  }

  // optional string pdata = 3;
  if (has_pdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pdata().data(), this->pdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.Message.pdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.Message)
  return target;
}

size_t Message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:google.Message)
  size_t total_size = 0;

  if (has_server_id()) {
    // required int32 server_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());
  }

  if (has_player_id()) {
    // required int32 player_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_id());
  }

  return total_size;
}
size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.Message)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 server_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server_id());

    // required int32 player_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string pdata = 3;
  if (has_pdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pdata());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.Message)
    UnsafeMergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Message::UnsafeMergeFrom(const Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_pdata()) {
      set_has_pdata();
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(server_id_, other->server_id_);
  std::swap(player_id_, other->player_id_);
  pdata_.Swap(&other->pdata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required int32 server_id = 1;
bool Message::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Message::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Message::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Message::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
::google::protobuf::int32 Message::server_id() const {
  // @@protoc_insertion_point(field_get:google.Message.server_id)
  return server_id_;
}
void Message::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:google.Message.server_id)
}

// required int32 player_id = 2;
bool Message::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Message::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Message::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Message::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
::google::protobuf::int32 Message::player_id() const {
  // @@protoc_insertion_point(field_get:google.Message.player_id)
  return player_id_;
}
void Message::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:google.Message.player_id)
}

// optional string pdata = 3;
bool Message::has_pdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Message::set_has_pdata() {
  _has_bits_[0] |= 0x00000004u;
}
void Message::clear_has_pdata() {
  _has_bits_[0] &= ~0x00000004u;
}
void Message::clear_pdata() {
  pdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pdata();
}
const ::std::string& Message::pdata() const {
  // @@protoc_insertion_point(field_get:google.Message.pdata)
  return pdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_pdata(const ::std::string& value) {
  set_has_pdata();
  pdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.Message.pdata)
}
void Message::set_pdata(const char* value) {
  set_has_pdata();
  pdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.Message.pdata)
}
void Message::set_pdata(const char* value, size_t size) {
  set_has_pdata();
  pdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.Message.pdata)
}
::std::string* Message::mutable_pdata() {
  set_has_pdata();
  // @@protoc_insertion_point(field_mutable:google.Message.pdata)
  return pdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_pdata() {
  // @@protoc_insertion_point(field_release:google.Message.pdata)
  clear_has_pdata();
  return pdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_pdata(::std::string* pdata) {
  if (pdata != NULL) {
    set_has_pdata();
  } else {
    clear_has_pdata();
  }
  pdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pdata);
  // @@protoc_insertion_point(field_set_allocated:google.Message.pdata)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace google

// @@protoc_insertion_point(global_scope)
