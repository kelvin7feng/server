// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google.proto

#ifndef PROTOBUF_google_2eproto__INCLUDED
#define PROTOBUF_google_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace google {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_google_2eproto();
void protobuf_InitDefaults_google_2eproto();
void protobuf_AssignDesc_google_2eproto();
void protobuf_ShutdownFile_google_2eproto();

class Message;

// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static const Message* internal_default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  void UnsafeMergeFrom(const Message& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int32 server_id() const;
  void set_server_id(::google::protobuf::int32 value);

  // required int32 player_id = 2;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional string pdata = 3;
  bool has_pdata() const;
  void clear_pdata();
  static const int kPdataFieldNumber = 3;
  const ::std::string& pdata() const;
  void set_pdata(const ::std::string& value);
  void set_pdata(const char* value);
  void set_pdata(const char* value, size_t size);
  ::std::string* mutable_pdata();
  ::std::string* release_pdata();
  void set_allocated_pdata(::std::string* pdata);

  // @@protoc_insertion_point(class_scope:google.Message)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_pdata();
  inline void clear_has_pdata();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pdata_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 player_id_;
  friend void  protobuf_InitDefaults_google_2eproto_impl();
  friend void  protobuf_AddDesc_google_2eproto_impl();
  friend void protobuf_AssignDesc_google_2eproto();
  friend void protobuf_ShutdownFile_google_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required int32 server_id = 1;
inline bool Message::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 Message::server_id() const {
  // @@protoc_insertion_point(field_get:google.Message.server_id)
  return server_id_;
}
inline void Message::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:google.Message.server_id)
}

// required int32 player_id = 2;
inline bool Message::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 Message::player_id() const {
  // @@protoc_insertion_point(field_get:google.Message.player_id)
  return player_id_;
}
inline void Message::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:google.Message.player_id)
}

// optional string pdata = 3;
inline bool Message::has_pdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_pdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_pdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_pdata() {
  pdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pdata();
}
inline const ::std::string& Message::pdata() const {
  // @@protoc_insertion_point(field_get:google.Message.pdata)
  return pdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_pdata(const ::std::string& value) {
  set_has_pdata();
  pdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.Message.pdata)
}
inline void Message::set_pdata(const char* value) {
  set_has_pdata();
  pdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.Message.pdata)
}
inline void Message::set_pdata(const char* value, size_t size) {
  set_has_pdata();
  pdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.Message.pdata)
}
inline ::std::string* Message::mutable_pdata() {
  set_has_pdata();
  // @@protoc_insertion_point(field_mutable:google.Message.pdata)
  return pdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_pdata() {
  // @@protoc_insertion_point(field_release:google.Message.pdata)
  clear_has_pdata();
  return pdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_pdata(::std::string* pdata) {
  if (pdata != NULL) {
    set_has_pdata();
  } else {
    clear_has_pdata();
  }
  pdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pdata);
  // @@protoc_insertion_point(field_set_allocated:google.Message.pdata)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2eproto__INCLUDED
